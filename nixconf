# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).

{ config, pkgs, ... }:

{
	imports =
		[ # Include the results of the hardware scan.
		./hardware-configuration.nix
		];

	boot.loader.systemd-boot.enable = true;
	boot.loader.efi.canTouchEfiVariables = true;

	networking.hostName = "doer"; # Define your hostname.
# networking.wireless.enable = true;  # Enables wireless support via wpa_supplicant.

# Configure network proxy if necessary
# networking.proxy.default = "http://user:password@proxy:port/";
# networking.proxy.noProxy = "127.0.0.1,localhost,internal.domain";

		networking.networkmanager.enable = true;

	time.timeZone = "Europe/Bucharest";

	i18n.defaultLocale = "en_US.UTF-8";

	i18n.extraLocaleSettings = {
		LC_ADDRESS = "ro_RO.UTF-8";
		LC_IDENTIFICATION = "ro_RO.UTF-8";
		LC_MEASUREMENT = "ro_RO.UTF-8";
		LC_MONETARY = "ro_RO.UTF-8";
		LC_NAME = "ro_RO.UTF-8";
		LC_NUMERIC = "ro_RO.UTF-8";
		LC_PAPER = "ro_RO.UTF-8";
		LC_TELEPHONE = "ro_RO.UTF-8";
		LC_TIME = "ro_RO.UTF-8";
	};

	services.logind = {
		lidSwitch = "lock";
		extraConfig = ''
			HandlePowerKey=ignore
			'';
	};

	services.xserver.enable = true;

	services.xserver.displayManager.gdm.enable = true;
	services.xserver.desktopManager.gnome.enable = true;

	services.xserver.xkb.layout = "us";
	services.xserver.xkb.variant = "";


	services.printing.enable = true;

# Enable sound with pipewire.
	hardware.pulseaudio.enable = false;
	security.rtkit.enable = true;
	services.pipewire = {
		enable = true;
		alsa.enable = true;
		alsa.support32Bit = true;
		pulse.enable = true;
# If you want to use JACK applications, uncomment this
#jack.enable = true;

# use the example session manager (no others are packaged yet so this is enabled by default,
# no need to redefine it in your config for now)
#media-session.enable = true;
	};

# Enable touchpad support (enabled default in most desktopManager).
# services.xserver.libinput.enable = true;

# Define a user account. Don't forget to set a password with ‘passwd’.
	users.users.mgvx = {
		isNormalUser = true;
		description = "Guceanu George - Marian";
		extraGroups = [ "networkmanager" "wheel" ];
		packages = with pkgs; [
			brave
				firefox
		];
	};

# Allow unfree packages
# nixpkgs.config.allowUnfree = true;
	nixpkgs.config = {
		allowUnfree = true;
		packageOverrides = pkgs: {
			unstable = import (fetchTarball "https://github.com/NixOS/nixpkgs/archive/nixos-unstable.tar.gz") {};
		};
	};

	programs.steam.enable = true;

	environment.systemPackages = with pkgs; [
# Hyprland
		hyprland
			hyprland-protocols
			polkit_gnome
			waybar
			pamixer
			swaynotificationcenter
			swaybg
			waypaper
			xdg-utils
			xdg-desktop-portal
			xdg-desktop-portal-hyprland
			swayidle
			hyprlock
			wl-clipboard
			hyprshot
			wofi
			grim
			wlogout
			brightnessctl
			libsForQt5.qt5ct
			libsForQt5.qtstyleplugin-kvantum

# Netting
			thunderbird

# Connectivity
			networkmanagerapplet
			blueman

# Fish
			fish
			fishPlugins.done
			fishPlugins.fzf-fish
			fishPlugins.forgit
			fishPlugins.hydro
			fzf
			fishPlugins.grc
			grc
			oh-my-fish

# Theming
			lxappearance
			papirus-icon-theme
			phinger-cursors
			qt5.qtwayland
			qt6.qmake
			qt6.qtwayland
			gtk4
			gtk3
			gtk2
			themechanger

# Gaming
			steam

# These are for basic editing and development
			unstable.neovim
			vim
			wget
			alacritty
			tmux
			vscode
			ripgrep
			gnutar
			killall

# Development
			git
			gh
			rocmPackages.llvm.clang
			python3
			go
			nodejs_22
			];

# Fonts
	fonts.packages = with pkgs; [
		noto-fonts
			noto-fonts-cjk
			noto-fonts-emoji
			font-awesome
			fira-sans
			(nerdfonts.override { fonts = [ "FiraCode" "Iosevka" "JetBrainsMono" ]; })
	];

# Qt config
	qt = {
		enable = true;
		platformTheme = "qt5ct";
		style = "kvantum";
	};

# Start fish
	programs.fish.enable = true;
	programs.bash = {
		interactiveShellInit = ''
			if [[ $(${pkgs.procps}/bin/ps --no-header --pid=$PPID --format=comm) != "fish" && -z ''${BASH_EXECUTION_STRING} ]]
				then
					shopt -q login_shell && LOGIN_OPTION='--login' || LOGIN_OPTION=""
					exec ${pkgs.fish}/bin/fish $LOGIN_OPTION
					fi
					'';
	};

# Start hyprland
	programs.hyprland.enable = true;

# Start waybar
	programs.waybar.enable = true;

# Some programs need SUID wrappers, can be configured further or are
# started in user sessions.
	programs.mtr.enable = true;
	programs.gnupg.agent = {
		enable = true;
		enableSSHSupport = true;
	};

# List services that you want to enable:

# Enable the OpenSSH daemon.
	services.openssh.enable = true;

# Open ports in the firewall.
# networking.firewall.allowedTCPPorts = [ ... ];
# networking.firewall.allowedUDPPorts = [ ... ];
# Or disable the firewall altogether.
# networking.firewall.enable = false;

# This value determines the NixOS release from which the default
# settings for stateful data, like file locations and database versions
# on your system were taken. It‘s perfectly fine and recommended to leave
# this value at the release version of the first install of this system.
# Before changing this value read the documentation for this option
# (e.g. man configuration.nix or on https://nixos.org/nixos/options.html).
	system.stateVersion = "24.05"; # Did you read the comment?

}

